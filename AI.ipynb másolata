{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1f_eS10WE62Kx_uKZAoN1YWbFGb8Axa9a","timestamp":1712429555244}],"authorship_tag":"ABX9TyMjhJDnghTr65sdNaXn5NqG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cUnutuWRg3Ua","executionInfo":{"status":"ok","timestamp":1712425523233,"user_tz":-120,"elapsed":664,"user":{"displayName":"Márk Németh","userId":"08804061133513418249"}},"outputId":"9d3e3524-bbe9-48ab-f889-bced7b47fdca"},"outputs":[{"output_type":"stream","name":"stdout","text":["   ID   Name   Age Gender  Income    Education  Score Label Has_Car Location  \\\n","0   1   John  25.0      M   50000     Bachelor     85   Yes    True     City   \n","1   2  Alice  30.0      F   60000       Master     90    No     NaN   Suburb   \n","2   3    Bob   NaN      M  200000  High School     75   Yes    True    Rural   \n","3   4   Mary  40.0      F   70000          PhD     50   Yes    True     City   \n","4   5   Jane  35.0      F   80000     Bachelor     80    No    True   Suburb   \n","\n","   High_Income  \n","0        False  \n","1        False  \n","2         True  \n","3         True  \n","4         True  \n"]}],"source":["import pandas as pd\n","import numpy as np\n","\n","# Creating sample data\n","data = {\n","    'ID': [1, 2, 3, 4, 5],\n","    'Name': ['John', 'Alice', 'Bob', 'Mary', 'Jane'],\n","    'Age': [25, 30, np.nan, 40, 35],\n","    'Gender': ['M', 'F', 'M', 'F', 'F'],\n","    'Income': [50000, 60000, 45000, 70000, 80000],\n","    'Education': ['Bachelor', 'Master', 'High School', 'PhD', 'Bachelor'],\n","    'Score': [85, 90, 75, 95, 80],\n","    'Label': ['Yes', 'No', 'Yes', 'Yes', 'No'],\n","    'Has_Car': [True, False, True, True, True],\n","    'Location': ['City', 'Suburb', 'Rural', 'City', 'Suburb'],\n","    'High_Income': [False, False, True, True, True]  # Target feature\n","}\n","\n","# Adding missing values and outliers\n","data['Age'][2] = np.nan\n","data['Income'][2] = 200000\n","data['Score'][3] = 50\n","data['Has_Car'][1] = np.nan\n","\n","# Creating DataFrame\n","df = pd.DataFrame(data)\n","\n","print(df)"]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","# One-hot encoding\n","df_one_hot = pd.get_dummies(df, columns=['Gender', 'Education', 'Location'])\n","# One-hot encoding creates binary columns for each category in the specified columns.\n","# It's useful when the categories have no ordinal relationship and the algorithm might interpret them as such.\n","print(\"One-Hot Encoded DataFrame:\")\n","print(df_one_hot)\n","\n","# Label encoding\n","label_encoder = LabelEncoder()\n","df_label_encoded = df.copy()\n","# Applying label encoding to 'Gender' column\n","df_label_encoded['Gender'] = label_encoder.fit_transform(df_label_encoded['Gender'])\n","# Applying label encoding to 'Education' column\n","df_label_encoded['Education'] = label_encoder.fit_transform(df_label_encoded['Education'])\n","# Applying label encoding to 'Location' column\n","df_label_encoded['Location'] = label_encoder.fit_transform(df_label_encoded['Location'])\n","# Label encoding assigns a unique integer to each category, making it easier for algorithms to process.\n","print(\"\\nLabel Encoded DataFrame:\")\n","print(df_label_encoded)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fj2L4Y20hgeo","executionInfo":{"status":"ok","timestamp":1712429433475,"user_tz":-120,"elapsed":1475,"user":{"displayName":"Márk Németh","userId":"08804061133513418249"}},"outputId":"7de8a723-434a-4091-ce2b-d4366c2f56ff"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["One-Hot Encoded DataFrame:\n","   ID   Name   Age  Income  Score Label Has_Car  High_Income  Gender_F  \\\n","0   1   John  25.0   50000     85   Yes    True        False     False   \n","1   2  Alice  30.0   60000     90    No     NaN        False      True   \n","2   3    Bob   NaN  200000     75   Yes    True         True     False   \n","3   4   Mary  40.0   70000     50   Yes    True         True      True   \n","4   5   Jane  35.0   80000     80    No    True         True      True   \n","\n","   Gender_M  Education_Bachelor  Education_High School  Education_Master  \\\n","0      True                True                  False             False   \n","1     False               False                  False              True   \n","2      True               False                   True             False   \n","3     False               False                  False             False   \n","4     False                True                  False             False   \n","\n","   Education_PhD  Location_City  Location_Rural  Location_Suburb  \n","0          False           True           False            False  \n","1          False          False           False             True  \n","2          False          False            True            False  \n","3           True           True           False            False  \n","4          False          False           False             True  \n","\n","Label Encoded DataFrame:\n","   ID   Name   Age  Gender  Income  Education  Score Label Has_Car  Location  \\\n","0   1   John  25.0       1   50000          0     85   Yes    True         0   \n","1   2  Alice  30.0       0   60000          2     90    No     NaN         2   \n","2   3    Bob   NaN       1  200000          1     75   Yes    True         1   \n","3   4   Mary  40.0       0   70000          3     50   Yes    True         0   \n","4   5   Jane  35.0       0   80000          0     80    No    True         2   \n","\n","   High_Income  \n","0        False  \n","1        False  \n","2         True  \n","3         True  \n","4         True  \n"]}]}]}